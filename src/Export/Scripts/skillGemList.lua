--
-- Export all playable skill gems from game data
--

out:write('-- This file is automatically generated, do not edit!\n')
out:write('-- Gem data (c) Grinding Gear Games\n\nreturn {\n')

local out = io.open("../Data/SkillGems.txt", "w")
local types = { "Str", "Dex", "Int", "Other" }
for i, _ in ipairs(types) do
	local active = {}
	local support = {}
	local colour
	for skillGem in dat("SkillGems"):Rows() do
		for _, gemEffect in ipairs(skillGem.GemEffects) do
			if skillGem.Str >= 50 then
				colour = "Str"
			elseif skillGem.Int >= 50 then
				colour = "Int"
			elseif skillGem.Dex >= 50 then
				colour = "Dex"
			else
				colour = "Other"
			end
			if skillGem.IsSupport and skillGem.GemColour == i and not gemEffect.Id:match("Unknown") and not skillGem.BaseItemType.Name:match("DNT") then
				local temp = skillGem.BaseItemType.Name..string.rep(" ", 30 - string.len(skillGem.BaseItemType.Name)).."\t\t----\t\t"..gemEffect.GrantedEffect.Id
				if gemEffect.AdditionalGrantedEffects then
					for _, additionalGrantedEffect in ipairs(gemEffect.AdditionalGrantedEffects) do
						temp = temp.."\t"..additionalGrantedEffect.Id
					end
				end
				table.insert(support, temp)
			elseif not skillGem.IsSupport and types[i] == colour and not gemEffect.Id:match("Unknown") and not gemEffect.GrantedEffect.ActiveSkill.DisplayName:match("DNT") then
				local temp = gemEffect.GrantedEffect.ActiveSkill.DisplayName..string.rep(" ", 30 - string.len(gemEffect.GrantedEffect.ActiveSkill.DisplayName)).."\t\t----\t\t"..gemEffect.GrantedEffect.Id
				if gemEffect.AdditionalGrantedEffects then
					for _, additionalGrantedEffect in ipairs(gemEffect.AdditionalGrantedEffects) do
						temp = temp.."\t"..additionalGrantedEffect.Id
					end
				end
				table.insert(active, temp)
			end
		end
	end
	table.sort(active)
	table.sort(support)
	out:write("\t\t\t\t\t\t--------- Active "..types[i].." ---------\n")
	out:write(table.concat(active, "\n"))
	out:write('\n\n')
	out:write("\t\t\t\t\t\t--------- Support "..types[i].." ---------\n")
	out:write(table.concat(support, "\n"))
	out:write('\n\n')
end

out:close()

print("Skill gems exported.")
