if not loadStatFile then
	dofile("statdesc.lua")
end
loadStatFile("stat_descriptions.csd")

local out = io.open("../Data/QuestRewards.lua", "w")
out:write('-- This file is automatically generated, do not edit!\n')
out:write('-- Item data (c) Grinding Gear Games\n\nreturn {\n')
for _, pin in pairs(dat("MapPins"):GetRowList("HasReward", true)) do
    if #pin.ShowFlags == 1 then
        local questReward = dat("QuestStaticRewards"):GetRow("QuestFlag", pin.ShowFlags[1])
        if questReward then
            out:write('\t{\n')
            out:write('\t\t["Act"] = ', pin.Act, ',\n')
            out:write('\t\t["Area"] = "', pin.Name, '",\n')
            local stats = { }
            local hasStat = false
            for i, stat in pairs(questReward.Stats) do
                hasStat = true
                local statValue = questReward.StatValues[i]
                stats[stat.Id] = { min = statValue, max = statValue }
            end
            if hasStat then
                out:write('\t\t["Stat"] = "', table.concat(describeStats(stats), ","), '",\n')
            end
            out:write('\t\t["questPoints"] = ', questReward.WeaponSetPointsRewarded, ',\n')
            local worldArea = dat("WorldAreas"):GetRow("Id", pin.BaseMapPin.Id)
            print(pin.BaseMapPin.Id)
            out:write('\t\t["AreaLevel"] = ', worldArea.AreaLevel, ',\n')
            out:write('\t},\n')
        end
    end
end
out:write('}')
out:close()