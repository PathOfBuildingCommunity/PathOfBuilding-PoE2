if not loadStatFile then
	dofile("statdesc.lua")
end
loadStatFile("stat_descriptions.csd")

local out = io.open("../Data/ModLineStats.lua", "w")
out:write('-- This file is automatically generated, do not edit!\n')
out:write('-- Item data (c) Grinding Gear Games\n\nreturn {\n')
local statRepresentations = describeModLineStats("stat_descriptions.csd")
local modLines = { }
for modLine, _ in pairs(statRepresentations) do
    table.insert(modLines, modLine)
end
table.sort(modLines)
for _, modLine in ipairs(modLines) do
    out:write('\t["', modLine, '"] = {\n')
    for i, statRepresentation in ipairs(statRepresentations[modLine]) do
        out:write('\t\t{ ')
        out:write('"', table.concat(statRepresentation, '", "'), '", ')
        if #statRepresentation.subsituions > 0 then
            out:write('subsituions = { ', table.concat(statRepresentation.subsituions, ', '), ' }, ')
        end
        if #statRepresentation.hasSign > 0 then
            out:write('hasSign = { ', table.concat(statRepresentation.hasSign, ', '), ' }, ')
        end
        if next(statRepresentation.values) then
            out:write('values = { ')
            for i, value in pairs(statRepresentation.values) do
                out:write('[',i,'] = ',value, ', ')
            end
            out:write('}, ')
        end
        if next(statRepresentation.formats) then
            out:write('formats = { ')
            if statRepresentation.formats.general then
                out:write('general = { "', table.concat(statRepresentation.formats.general, '", "'), '" }, ')
                statRepresentation.formats.general = nil
            end
            for i, statFormats in pairs(statRepresentation.formats) do
                out:write('[',i,'] = { "', table.concat(statFormats, '", "'), '" }, ')
            end
            out:write('}, ')
        end
        out:write('order = ', statRepresentation.order, ', ')
         -- can't use concat with booleans
        if #statRepresentation.isLocal > 0 then
            out:write('isLocal = { ')
            for i, v in ipairs(statRepresentation.isLocal) do
                out:write(tostring(v))
                if i < #statRepresentation.isLocal then
                    out:write(', ')
                end
            end
            out:write(' }, ')
        end
        if #statRepresentation.isScalable > 0 then
            out:write('isScalable = { ')
            for i, v in ipairs(statRepresentation.isScalable) do
                out:write(tostring(v))
                if i < #statRepresentation.isScalable then
                    out:write(', ')
                end
            end
            out:write(' }, ')
        end
        out:write("},\n")
    end
    out:write("\t},\n")
end

out:write('}')
out:close()

print("ModLine stats exported.")